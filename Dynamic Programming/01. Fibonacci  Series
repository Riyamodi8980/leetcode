# RECURSSIVE
class Solution:
    def fib(self, n: int) -> int:
        if n<=1:
            return n
        return self.fib(n-1)+ self.fib(n-2)
        
# MEMOIZATION
class Solution:
    def fib(self, n: int) -> int:
        memo=dict()
        def f(n):
            if n<=1:
                return n
            if n in memo:
                return memo[n]

            memo[n]=f(n-1)+ f(n-2)
            return memo[n]
        return f(n)
        
        OR
        
class Solution:
    def fib(self, n: int) -> int:
        memo={0:0,1:1}
        
        def f(n):
            if n in memo:
                return memo[n]

            memo[n]=f(n-1)+ f(n-2)
            return memo[n]
        
        return f(n)
