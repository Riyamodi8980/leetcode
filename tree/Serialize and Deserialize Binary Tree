class Codec:
    
    def serialize(self, root):
        """Encodes a tree to a single string.
        
        :type root: TreeNode
        :rtype: str
        """
        result=''
        
        if root==None:
            return result
        
        # queue
        que=[root]
        
        
        while len(que):
         
            node=que.pop(0)
            if node==None:
                result+='#,'
            else:
                result+=str(node.val)+','
                
            if node:
                que.append(node.left)
                que.append(node.right)
            
        return result
        

    def deserialize(self, data):
        """Decodes your encoded data to tree.
        
        :type data: str
        :rtype: TreeNode
        
        """
        q=data.split(',')
        q=q[:-1]
        
        if len(q)==0:
            return []

        root=TreeNode(q.pop(0))
        r=[root]
        while q:
            node=r.pop(0)
            
            data=q.pop(0)
            if data=="#":
                node.left=None
            else:
                node.left=TreeNode(data)
                r.append(node.left)
                
            data=q.pop(0)
            if data=="#":
                node.right=None
            else:
                node.right=TreeNode(data)
                r.append(node.right)
        
        return root
