# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        
        
        
        interval=[float('-inf'),float('inf')]
        
        def isValid(root,interval):
            if root==None:
                return True
        
        
            if interval[0]<root.val<interval[1]:
                
                l=isValid(root.left,[interval[0],root.val])
                r=isValid(root.right,[root.val,interval[1]])
            
                if l==True and r==True:
                    return True
                
            return False
        
        return isValid(root,interval)
